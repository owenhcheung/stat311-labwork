knitr::opts_chunk$set(echo = TRUE)
data = nycflights
data = nycflights
---
title: 'STAT 311 -- Lab 2'
subtitle: 'Group ___'
author: 'Group Member Names Here'
date: 'Tuesday, July 26, 2022 @ 11:59pm'
output:
html_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
<!-- +  This lab is due on Friday July 22 by midnight. No late work is accepted. -->
<!-- +  Please answer ALL questions (including those that do not involve R) in the locations marked in this template. Remember to periodically **knit** your document to check that the output appears as you want it to.  -->
<!-- +  You will need to upload this document in CANVAS. Please be sure to check that your file was uploaded correctly. It does not hurt to screenshot verification of the upload as CANVAS can be glitchy on occasion. -->
<!-- +  Please answer the questions in the order in which they are posed. Write in complete sentences, and support your answers where asked.  -->
<!-- +  To submit this assignment, you should knit your document to html and either print or save the file as a pdf. -->
<!-- +  NOTE: to view the official R documentation for any function, type `?function_name` in the R console. For example, to view the documentation for the 'ggplot' function, enter `?ggplot` in the console. Keep in mind this will only work if you have loaded the necessary libraries. -->
* * *
## Exercise 1: R Practice
<!-- This lab exercise refers to the same  flights data. The goal here is to study how departure delays vary by departing airport. The code chunk below loads the appropriate libraries and the relevant data set loaded in your RMarkdown file.  -->
```{r, include=FALSE}
# load the appropriate libraries
library(tidyverse)
library(openintro)
library(ggplot2)
# load the relevant data set
source("http://www.openintro.org/stat/data/nycflights.R")
```
### Part a)
<!-- First, create a visual summary of the `dep_delay` variable, broken down by departing airport (`origin`). Since `dep_delay` is quantitative and `origin` is categorical, a nice option is side-by-side boxplots of `dep_delay` for each origin airport. Create this graphic and describe what you see. -->
<!-- Hint: To create side by side boxplots using `ggplot`, we should specify: -->
<!--   * `data = nycflights` -->
<!--   * `aes(x=origin, y=dep_delay)` -->
<!--   *  `geom_boxplot` -->
```{r, include=TRUE}
data = nycflights
bplots <- ggplot(data, aes(x=origin, y=dep_delay)) +
geom_boxplot()
bplots
```
<!-- Explain why this is perhaps not the most useful visual in the space below. -->
I think that one reason this might not be the most useful visual as the boxplots are all extremely
hard to read due to the scale of the plots.
### Part b)
<!-- Next, let's compare numerical summaries of `dep_delay` across the three `origin` airports. Using `group_by()` and `summarize()`, print out the mean and median `dep_delay` for each of the three `origin` airports. -->
```{r, include=TRUE}
data = nycflights
mean_and_med <- data %>%
group_by(origin) %>%
summarize(mean=mean(dep_delay), median=median(dep_delay))
mean_and_med
```
### Part c)
<!-- What explains the big differences between the means and the medians? Based on the shape of the distributions, do you prefer to compare the airports using the mean or the median? Give your answer in the space below. (No additional code is necessary to answer this question.)-->
One explanation for the large difference between the means and the medians would be that there are a lot of
negative departure delays as well as positive departure delays in the hundreds so if you took a mean/average of that group you would be more likely to get a positive number leaning more towards the positive departure delays while if you took a median of the group its reasonable to get a negative number since there are a largue quantity of negative departure delays in the group. I think that I would want to use mean since it might be more representative of the spread of the data
### Part d)
<!-- For this next part, suppose we don't care about the average delay time of departing flights, but we do care about the percentage of flights leaving from each airport that were delayed. For practical purposes, let's suppose that any flight that is delayed for less than 5 minutes is basically on time, while any flight delayed for 5 minutes or more is "delayed". -->
<!-- Now `mutate` the `nycflights` dataset to contain a new variable called `delayed`, which stores `TRUE` if `dep_delay > 5` and `FALSE` otherwise. *Hint: Refer to the "Manipulating a Dataset" section of the R tutorial, and specifically to the `more_boys` example.* -->
```{r, include=TRUE}
data = nycflights
newset <- shootings %>%
mutate(delayed = dep_delay > 5) %>% #this should work
head(newset)
```
### Part e)
<!-- Group flights by origin airport and display the number of delayed flights for each origin airport along with the number of total flights for each origin airport. Include your code in the below chunk. Make sure your answer is printed in your knitted file. -->
<!-- Hint:  R treats the value `TRUE` as 1 and `FALSE` as 0. So, to count the number of times a certain variable is equal to `TRUE`, you can use the `sum()` operation on that variable. The `more_boys` example in the tutorial may help. -->
```{r, include=TRUE}
```
### Part f)
<!-- Which airport had the highest percentage of delayed flights? If you choose to use R to answer this question, write your code in the below code chunk.-->
```{r, include=FALSE}
```
<!-- The above code chunk will not appear in your knitted file (due to the "include=FALSE" option). Please use the space below to state your answer to part e). -->
* * *
## Exercise 2:  Exercise and General Health
<!-- This homework exercise refers to the same CDC data set as Lab 2. In the lab, we explored the relationship between the categorical variables `genhlth`, a self reported measure of general health, and `smoke100`, an indicator for whether an individual has smoked 100 times in their life. In this assignment, we will explore the relationship between `genhlth` and `exerany`, where `exerany` is an indicator for whether or not an individual has exercised in the past month.  -->
<!-- To start, you need to load our necessary packages, load the dataset, and tell R to order the 5 levels of `genhlth` (as in the lab). -->
```{r, include=FALSE}
library(tidyverse)
library(openintro)
cdc <- read.table("http://www.stat.uchicago.edu/~yibi/s220/labs/data/cdc.dat", header=TRUE)
cdc <- cdc %>% mutate(genhlth = ordered(genhlth,
levels=c("poor", "fair", "good", "very good", "excellent")))
```
### Part a)
<!-- Using `mosaic::tally()`, create a two-way contingency table between `exerany` and `genhlth`. You may add margins if you like. -->
```{r, include=TRUE}
```
### Part b)
<!-- What proportion of the sample has exercised in the past month? What proportion of the sample reports being in excellent health?  -->
<!-- You may use a specific function from lab to compute these proportions, or you may extract the appropriate numbers from your table in part a) and use R as a calculator. In either case, include your code and explain how you arrived at your answer. -->
```{r, include=TRUE}
```
<!-- Provide your written answer in the space below. -->
### Part c)
<!-- Among those who exercised in the past month, what proportion of them report being in excellent health? What about among those who did not exercise in the past month? -->
<!-- There are a number of ways to arrive at these answers in R. The most direct way is to use prop.table(1) to get row percentages, but you may also use data subsetting, or extract the appropriate numbers from the contingency table and use R as a calculator. Any method is fine, but please show your work. -->
```{r, include=TRUE}
```
<!-- Provide your written answer in the space below. -->
### Part d)
<!-- Make a stacked bar chart that represents the two-way table in part (a). Put the ``genhlth`` variable on the x-axis and color the bar stacks using ``exerany``.  -->
```{r, include=TRUE}
```
### Part e)
<!-- Make a mosaic plot that compares the self-rated general health between those who had exercised in the past month and those who hadnâ€™t. Based on the plots, which group had better self-rated general health? -->
```{r, include=TRUE}
```
<!-- Provide your answer in the space below. -->
### Part f)
<!-- Are the two variables exerany and genhlth independent? Use the space below to justify your answer. -->
* * *
## Exercise 3:  More Research Questions
<!-- From Lab 1, finally propose three research questions and indicate appropriate statistical method(s) to be used for this research/analysis. Explain why you proposed this statistical method(s). It is fine to stick with what you had already proposed if you do not think changes are needed.  -->
### Research Question 1
#### Proposed Question
<!-- Use this space to propose your first research question. -->
#### Proposed Statistical Method
<!-- Use this space to propose an appropriate statistical method. -->
### Research Question 2
#### Proposed Question
<!-- Use this space to propose your first research question. -->
#### Proposed Statistical Method
<!-- Use this space to propose an appropriate statistical method. -->
### Research Question 3
#### Proposed Question
<!-- Use this space to propose your first research question. -->
#### Proposed Statistical Method
<!-- Use this space to propose an appropriate statistical method. -->
data = nycflights
newset <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
head(newset)
data = nycflights
newset <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
newset
data = nycflights
newset <- data %>%
mutate(delayed = dep_delay > 5) #this should work
head(newset)
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
summarize(total flights from location=tally(), num delayed from location=sum(delayed))
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
summarize(total=tally(), delayed=sum(delayed))
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
summarize(total=sum(origin), delayed=sum(delayed))
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
summarize(total=count(origin), delayed=sum(delayed))
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
tally() %>%
summarize(delayed=sum(delayed))
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
tally() %>%
mutate(numdelayed = sum(delayed))
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin)
head(newset2)
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
add_count()
head(newset2)
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
add_count()
View(newset2)
data = nycflights
newset2 <- data %>%
mutate(delayed = dep_delay > 5) %>% #this should work
group_by(origin) %>%
add_count() %>%
sum(delayed)
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
add_count() %>%
sum(delayed)
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
add_count()
head(newset2)
data = nycflights
mean_and_med <- data %>%
group_by(origin) %>%
summarize(mean=mean(dep_delay), median=median(dep_delay))
mean_and_med
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
summarize(total=count(), num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
summarize(total=add_count(), num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
add_count() %>%
summarize(total=n, num_delayed=sum(delayed))
head(newset2)
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
add_count() %>%
summarize(total=n, num_delayed=sum(delayed))
newset2
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
add_count() %>%
summarize(num_delayed=sum(delayed))
newset2
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
#add_count() %>%
summarize(total=count(), num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
#add_count() %>%
summarize(total=count(origin), num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
#add_count() %>%
summarize(count(), num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
#add_count() %>%
summarize(tally(), num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
summarise(n = n()) %>%
#add_count() %>%
summarize(num_delayed=sum(delayed))
data = nycflights
newset2 <- newset %>%
group_by(origin) %>%
#add_count() %>%
summarize(total=n(), num_delayed=sum(delayed))
newset2
checkp <- transform(newset2, percent_delayed = num_delayed / total)
checkp
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
cdc <- read.table("http://www.stat.uchicago.edu/~yibi/s220/labs/data/cdc.dat", header=TRUE)
library(tidyverse)
library(openintro)
library(statsr)
cdc <- read.table("http://www.stat.uchicago.edu/~yibi/s220/labs/data/cdc.dat", header=TRUE)
cdc <- cdc %>% mutate(genhlth = ordered(genhlth,
levels=c("poor", "fair", "good", "very good", "excellent")))
contingency <- table(cdc$exerany, cdc$genhlth)
print.table(contingency)
contingency_margins <- addmargins(contingency)
print.table(contingency_margins)
contingency <- table(cdc$exerany, cdc$genhlth)
print.table(contingency)
contingency_margins <- addmargins(contingency)
print.table(contingency_margins)
contingency_prop <- prop.table(contingency)
print(contingency_prop)
contingency_prop <- prop.table(contingency)
print(contingency_prop)
bar_chart <- barplot(contingency_prop,
main = "Stacked Bar chart of General Health Vs. Exercize in Last Month",
sub = "Recorded by the Behavioral Risk Factor Surveillance System (BRFSS)",
xlab = "genhlth",
ylab = "exerany",
axes = TRUE)
mosaic_plot <- mosaicplot(contingency_prop,
main = "Mosaic Plot of General Health Vs. Exercize in Last Month",
sub = "Recorded by the Behavioral Risk Factor Surveillance System (BRFSS)")
setwd("~/Documents/Stat311/stat311-labwork")
ex7 <- lm(runs ~ homeruns, data = mlb)
# reading in (loading) the data set
mlb <- read.csv("https://anna-neufeld.github.io/Stat311/oiLabs/Week10/mlb11.csv")
plot1 <- ggplot(mlb, aes(x=at_bats, y=runs)) +
geom_point()
print(plot1)
test <- cor(mlb$runs, mlb$at_bats)
print(test)
ex5 <- 0.556*5421 - 2370.547
print(ex5)
residual <- 556 - 643.529
print(residual)
ex7 <- lm(runs ~ homeruns, data = mlb)
summary(ex7)
<<<<<<< HEAD
ex7 <- lm(runs ~ homeruns, data = mlb)
summary(ex7)
<<<<<<< HEAD
ex7 <- lm(runs ~ homeruns, data = mlb)
summary(ex7)
<<<<<<< HEAD
ex7 <- lm(runs ~ homeruns, data = mlb)
summary(ex7)
<<<<<<< HEAD
ex7 <- lm(runs ~ homeruns, data = mlb)
summary(ex7)
ex8_1 <- lm(runs ~ stolen_bases, data = mlb)
summary(ex8_1)
<<<<<<< HEAD
ex8_2 <- lm(runs ~ new_obs, data = mlb)
summary(ex8_2)
ex8_3 <- lm(runs ~ new_slug, data = mlb)
summary(ex8_3)
=======
summary(ex8_2)
ex8_3 <- lm(runs ~ new_slug, data = mlb)
summary(ex8_3)
>>>>>>> adb9f85a01bd25d1989adbf36c59b0045b80dde4
ex8_4 <- lm(runs ~ homeruns, data = mlb)
summary(ex8_4)
ex8_1 <- lm(runs ~ stolen_bases, data = mlb)
summary(ex8_1)
<<<<<<< HEAD
ex8_1 <- lm(runs ~ stolen_bases, data = mlb)
summary(ex8_1)
<<<<<<< HEAD
